{"version":3,"sources":["components/Header.js","components/Search.js","components/Main.js","assets/github-brands.svg","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","onChange","autoFocus","e","target","value","placeholder","Main","useState","names","setNames","filter","setFilter","sortType","setSortType","useEffect","fetch","then","res","json","data","catch","err","console","log","content","filterNames","sort","a","b","name","amount","item","toLowerCase","includes","length","map","reduce","total","Footer","onClick","window","open","src","github","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAQeA,G,YARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,oBAAIA,UAAU,cAAd,mC,OCKGC,EARA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKF,UAAU,SAAf,SACI,uBAAOA,UAAU,eAAeG,WAAS,EAACD,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOC,QAAQC,YAAY,cC6F9FC,EA7FF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEaF,mBAAS,IAFtB,mBAERG,EAFQ,KAEAC,EAFA,OAIiBJ,mBAAS,gBAJ1B,mBAIRK,EAJQ,KAIEC,EAJF,KAOfC,qBAAU,WAENC,MADY,cAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHV,EAASU,EAAKX,UAEjBY,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QACjC,IAEH,IA2BIG,EAVEC,EAAc,WAChB,OAjBiB,iBAAbb,EACOJ,EAAMkB,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAEE,KAAOD,EAAEC,MACH,EAERF,EAAEE,KAAOD,EAAEC,KACJ,EAEJ,KAGE,eAAbjB,EACOJ,EAAMkB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,eAD7C,GAMmBpB,QAAO,SAACqB,GAAD,OAAUA,EAAKF,KAAKG,cAAcC,SAASvB,OA0BzE,OAdIc,EADyB,IAAzBC,IAAcS,OAEV,6BACI,oDAIET,IAAcU,KAAI,SAACJ,GAAD,OACxB,+BACI,6BAAKA,EAAKF,OACV,6BAAKE,EAAKD,WAFLC,EAAKF,SAQlB,qCACI,cAAC,EAAD,CAAQ7B,SAAU,SAACI,GAAD,OAAWO,EAAUP,EAAM4B,kBAC7C,sBAAKlC,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UACI,2CACA,yBAAQ+B,KAAK,UAAU7B,SAAU,SAACE,GAAD,OAAOW,EAAYX,EAAEC,OAAOC,QAA7D,UACI,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,aAAd,8BAGR,kCACI,gCACI,+BACI,sCACA,6CAGR,kCACKoB,EACD,uBACA,qBAAI1B,UAAU,YAAd,UACI,uCACA,6BA7Cb2B,IAAcW,QAAO,SAACC,EAAOR,GAChC,OAAOQ,EAAQR,EAAKC,SACrB,qBC5CI,MAA0B,0CCgB1BQ,EAdA,WACX,OACI,qBAAKxC,UAAU,SAAf,SACI,sBACIA,UAAU,gBACVyC,QAAS,kBAAMC,OAAOC,KAAK,wDAAyD,WAFxF,UAII,qBAAK3C,UAAU,qBAAqB4C,IAAKC,EAAQC,IAAI,gBACrD,mBAAG9C,UAAU,qBAAb,uCCKD+C,MAVf,WACI,OACI,sBAAK/C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCEGgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f417cee4.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h2 className=\"header-text\">Names Application</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","const Search = ({ onChange }) => {\r\n    return (\r\n        <div className=\"search\">\r\n            <input className=\"search-input\" autoFocus onChange={(e) => onChange(e.target.value)} placeholder=\"Search\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nconst Main = () => {\r\n    const [names, setNames] = useState([]);\r\n    const [filter, setFilter] = useState(\"\");\r\n    // Alphabetical sorting by default\r\n    const [sortType, setSortType] = useState(\"alphabetical\");\r\n\r\n    // Get data on component mount.\r\n    useEffect(() => {\r\n        const url = \"/api/names\";\r\n        fetch(url)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setNames(data.names);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    const sortNames = () => {\r\n        if (sortType === \"alphabetical\") {\r\n            return names.sort((a, b) => {\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        if (sortType === \"popularity\") {\r\n            return names.sort((a, b) => b.amount - a.amount);\r\n        }\r\n    };\r\n\r\n    const filterNames = () => {\r\n        return sortNames().filter((item) => item.name.toLowerCase().includes(filter));\r\n    };\r\n\r\n    const totalNames = () => {\r\n        return filterNames().reduce((total, name) => {\r\n            return total + name.amount;\r\n        }, 0);\r\n    };\r\n\r\n    let content;\r\n\r\n    if (filterNames().length === 0) {\r\n        content = (\r\n            <tr>\r\n                <td>No matches found</td>\r\n            </tr>\r\n        );\r\n    } else {\r\n        content = filterNames().map((item) => (\r\n            <tr key={item.name}>\r\n                <td>{item.name}</td>\r\n                <td>{item.amount}</td>\r\n            </tr>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Search onChange={(value) => setFilter(value.toLowerCase())} />\r\n            <div className=\"main-content\">\r\n                <div className=\"sort\">\r\n                    <label>Sort: </label>\r\n                    <select name=\"Sort by\" onChange={(e) => setSortType(e.target.value)}>\r\n                        <option value=\"alphabetical\">Alphabetical</option>\r\n                        <option value=\"popularity\">Popularity</option>\r\n                    </select>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {content}\r\n                        <hr></hr>\r\n                        <tr className=\"total-row\">\r\n                            <td>Total</td>\r\n                            <td>{totalNames()}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/github-brands.e2f07326.svg\";","import github from \"../assets/github-brands.svg\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div\r\n                className=\"github-button\"\r\n                onClick={() => window.open(\"https://github.com/hk279/Solita-assignment-2020-front\", \"_blank\")}\r\n            >\r\n                <img className=\"github-button-icon\" src={github} alt=\"Github logo\"></img>\r\n                <p className=\"github-button-text\">View code on GitHub</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}